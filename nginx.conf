
#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


#http {
#    include       mime.types;
#    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

#    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
#    keepalive_timeout  65;

    #gzip  on;

#    server {
#        listen       80;
#        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

#        location / {
#            root   html;
#            index  index.html index.htm;
#        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
#        error_page   500 502 503 504  /50x.html;
#        location = /50x.html {
#            root   html;
#        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
#    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

#}

rtmp { 
    server { 
        listen 1935; 
        #chunk_size 4096;

        # enable this endpoint for hls adaptive bitrate streaming
        application ingest {
            live on;
#            exec ffmpeg -re -i rtmp://localhost/$app/$name -c:a aac -c:v libx264 -f flv rtmp://localhost/live/stream_180;
            exec ffmpeg -re -stream_loop -1 -i rtmp://localhost/$app/$name 

            -c:v libx264 -preset ultrafast -b:v 256K -bufsize 256k -s 320x180 -c:a aac -b:a 64k 
#            -vf "drawtext= fontcolor=red: fontsize=10: text='180': x=10: y=10:" 
            -f flv rtmp://localhost/live/stream_180
 
            -c:v libx264 -b:v 768K -s 640x360 -c:a aac -b:a 96k 
#            -vf "drawtext= fontcolor=blue: fontsize=10: text='360': x=10: y=10:" 
            -f flv rtmp://localhost/live/stream_360

            -c:v libx264 -b:v 1920K -s 1280x720 -c:a aac -b:a 128k
#            -vf "drawtext= fontcolor=green: fontsize=10: text='720': x=10: y=10:" 
            -f flv rtmp://localhost/live/stream_720

            -c:v copy # libx264 -preset ultrafast -b:v 1024K -bufsize 1024k -s 960x540 
            -c:a copy # aac -b:a 128k 
            #-vf "drawtext= fontcolor=red: fontsize=20: text='540': x=10: y=10:" 
            -f flv rtmp://localhost/live/stream_max;
        }

        application live { 
            live on; 
            interleave on;
 
            hls on; 
            hls_path /tmp/hls; 
            hls_fragment 3s; 
	    hls_playlist_length 9s;

            # enable this block for hls adaptive bitrate streaming
            hls_variant _180 BANDWIDTH=256000;
            hls_variant _360 BANDWIDTH=448000;
            hls_variant _720 BANDWIDTH=2048000;
            hls_variant _max BANDWIDTH=2050000;

             # enable this block for dash streaming
#            dash on;
#            dash_path /tmp/dash;
#            dash_fragment 1s;
#            dash_playlist_length 10s;
        } 
    } 
} 
 
http { 
    default_type application/octet-stream;
    #sendfile off;
    #tcp_nopush on;
    #3directio 512;

    server { 
        listen 80; 
	add_header Access-Control-Allow-Origin *;
        location / { 
            # add_header 'Cache-Control' 'no-cache'; # experimental # causes to hang on loading, all browsers
            #add_header 'Access-Control-Allow-Origin' '*' always;
            #add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
#            if ($request_method = 'OPTIONS') {
#                add_header 'Access-Control-Allow-Origin' '*';
#                add_header 'Access-Control-Max-Age' 1728000;
#                add_header 'Content-Type' 'text/plain charset=UTF-8';
#                add_header 'Content-Length' 0;
#                return 204;
#            }

            root /tmp; 
        } 
    }
 
    types {
        application/vnd.apple.mpegurl m3u8;
        video/mp2t ts;
        text/html html;
	application/dash+xml mpd;
    } 
}
